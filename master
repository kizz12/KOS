 --local osEvent=os.pullEvent
--os.pullEvent=os.pullEventRaw
function protect()
	local oldFs = fs.open
		print'OS Protect active!'
		fs.open = function(path,...)
		  if path == "rom/programs/edit" or path == "/rom/programs/edit" then 
				print'Failed to call edit!'
				return
		end
		  if path == "rom/programs/delete" or path == "/rom/programs/delete" then
		  print'Failed to call delete!'
				return
		end
		if path ~= "rom/programs/delete" or path ~= "/rom/programs/delete" or path ~= "rom/programs/edit" or path ~= "/rom/programs/edit" then
        return oldFs(path,...)
		end
	end
end

os.pullEvent = function(filter)
        while true do
                local myEvent = {os.pullEventRaw(filter)}
                if myEvent[1] ~= "terminate" then return unpack(myEvent) end
        end
end

function logout()
	timetor=300
	while timetor > 0 do
		term.clear()
		term.setCursorPos(1,1)
		timetor=timetor-1
		print('Welcome OP. System Online. Restarting in '..timetor..' seconds.')
		sleep(.95)
	end
	os.reboot()
end

function listener()
	while true do		
		event,timer = os.pullEvent("extendme")
		if event == "extendme" and timer > 0 then
			print("Extending time!")
			timetor=timetor+timer
		end
	end
end



parallel.waitForAll(listener,logout,protect)
os.pullEvent=osEvent